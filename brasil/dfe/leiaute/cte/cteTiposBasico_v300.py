# Generated by xsd2py.py
# DO NOT CHANGE THIS FILE (use compile override instead)
# xsd: cteTiposBasico_v3.00.xsd
# xmlns: http://www.portalfiscal.inf.br/cte
from typing import List, Annotated
from datetime import date, datetime
from decimal import Decimal

from brasil.dfe.xsd import Choice, SimpleType, ComplexType, Attribute, Element, TString, Restriction, ID, base64Binary, anyURI, string, dateTime, TXML, ElementList, XmlSignature
from .tiposGeralCTe_v300 import *


class TVerCTe(str):
    """Tipo Versão do CT-e - 3.00"""
    pass


class TProtCTe(ComplexType):
    """Tipo Protocolo de status resultado do processamento da CT-e"""
    versao: Annotated[TVerCTe, Attribute] = None

    class _infProt(ComplexType):
        """Dados do protocolo de status"""
        Id: Annotated[str, Attribute] = None
        tpAmb: Annotated[TAmb, Element] = None
        verAplic: Annotated[TVerAplic, Element] = None
        chCTe: Annotated[TChNFe, Element] = None
        dhRecbto: Annotated[TDateTimeUTC, Element] = None
        nProt: Annotated[TProt, Element] = None
        digVal: Annotated[TXML, Element] = None
        cStat: Annotated[TStat, Element] = None
        xMotivo: Annotated[TMotivo, Element] = None

    infProt: Annotated[_infProt, Element] = None

    class _infFisco(ComplexType):
        """Mensagem do Fisco"""
        cMsg: Annotated[TStat, Element] = None
        xMsg: Annotated[TMotivo, Element] = None

    infFisco: Annotated[_infFisco, Element] = None
    Signature: Annotated[XmlSignature, Element] = None


class TProtCTeOS(ComplexType):
    """Tipo Protocolo de status resultado do processamento do CT-e OS (Modelo 67)"""
    versao: Annotated[TVerCTe, Attribute] = None

    class _infProt(ComplexType):
        """Dados do protocolo de status"""
        Id: Annotated[str, Attribute] = None
        tpAmb: Annotated[TAmb, Element] = None
        verAplic: Annotated[TVerAplic, Element] = None
        chCTe: Annotated[TChNFe, Element] = None
        dhRecbto: Annotated[TDateTimeUTC, Element] = None
        nProt: Annotated[TProt, Element] = None
        digVal: Annotated[TXML, Element] = None
        cStat: Annotated[TStat, Element] = None
        xMotivo: Annotated[TMotivo, Element] = None

    infProt: Annotated[_infProt, Element] = None

    class _infFisco(ComplexType):
        """Mensagem do Fisco"""
        cMsg: Annotated[TStat, Element] = None
        xMsg: Annotated[TMotivo, Element] = None

    infFisco: Annotated[_infFisco, Element] = None
    Signature: Annotated[XmlSignature, Element] = None


class TRetCTe(ComplexType):
    """Tipo Retorno do Pedido de Autorização de CT-e (Modelo 57)"""
    versao: Annotated[TVerCTe, Attribute] = None
    tpAmb: Annotated[TAmb, Element] = None
    cUF: Annotated[TCodUfIBGE, Element] = None
    verAplic: Annotated[TVerAplic, Element] = None
    cStat: Annotated[TStat, Element] = None
    xMotivo: Annotated[TMotivo, Element] = None
    protCTe: Annotated[TProtCTe, Element] = None


class TRetCTeOS(ComplexType):
    """Tipo Retorno do Pedido de Autorização de CT-e OS (Modelo 67)"""
    versao: Annotated[TVerCTe, Attribute] = None
    tpAmb: Annotated[TAmb, Element] = None
    cUF: Annotated[TCodUfIBGE, Element] = None
    verAplic: Annotated[TVerAplic, Element] = None
    cStat: Annotated[TStat, Element] = None
    xMotivo: Annotated[TMotivo, Element] = None
    protCTe: Annotated[TProtCTeOS, Element] = None


class TEndeEmi(ComplexType):
    """Tipo Dados do Endereço"""
    xLgr: Annotated[str, Element] = None
    nro: Annotated[str, Element] = None
    xCpl: Annotated[str, Element] = None
    xBairro: Annotated[str, Element] = None
    cMun: Annotated[TCodMunIBGE, Element] = None
    xMun: Annotated[str, Element] = None
    CEP: Annotated[str, Element] = None
    UF: Annotated[TUF_sem_EX, Element] = None
    fone: Annotated[TFone, Element] = None


class TEndereco(ComplexType):
    """Tipo Dados do Endereço"""
    xLgr: Annotated[str, Element] = None
    nro: Annotated[str, Element] = None
    xCpl: Annotated[str, Element] = None
    xBairro: Annotated[str, Element] = None
    cMun: Annotated[TCodMunIBGE, Element] = None
    xMun: Annotated[str, Element] = None
    CEP: Annotated[str, Element] = None
    UF: Annotated[TUf, Element] = None
    cPais: Annotated[str, Element] = None
    xPais: Annotated[str, Element] = None


class TImp(ComplexType):
    """Tipo Dados do Imposto CT-e"""

    class _ICMS00(ComplexType):
        """Prestação sujeito à tributação normal do ICMS"""
        CST: Annotated[str, Element] = None
        vBC: Annotated[TDec_1302, Element] = None
        pICMS: Annotated[TDec_0302, Element] = None
        vICMS: Annotated[TDec_1302, Element] = None

    ICMS00: Annotated[_ICMS00, Element] = None

    class _ICMS20(ComplexType):
        """Prestação sujeito à tributação com redução de BC do ICMS"""
        CST: Annotated[str, Element] = None
        pRedBC: Annotated[TDec_0302Opc, Element] = None
        vBC: Annotated[TDec_1302, Element] = None
        pICMS: Annotated[TDec_0302, Element] = None
        vICMS: Annotated[TDec_1302, Element] = None

    ICMS20: Annotated[_ICMS20, Element] = None

    class _ICMS45(ComplexType):
        """ICMS  Isento, não Tributado ou diferido"""
        CST: Annotated[str, Element] = None

    ICMS45: Annotated[_ICMS45, Element] = None

    class _ICMS60(ComplexType):
        """Tributação pelo ICMS60 - ICMS cobrado por substituição tributária.Responsabilidade do recolhimento do ICMS atribuído ao tomador ou 3º por ST"""
        CST: Annotated[str, Element] = None
        vBCSTRet: Annotated[TDec_1302, Element] = None
        vICMSSTRet: Annotated[TDec_1302, Element] = None
        pICMSSTRet: Annotated[TDec_0302, Element] = None
        vCred: Annotated[TDec_1302, Element] = None

    ICMS60: Annotated[_ICMS60, Element] = None

    class _ICMS90(ComplexType):
        """ICMS Outros"""
        CST: Annotated[str, Element] = None
        pRedBC: Annotated[TDec_0302Opc, Element] = None
        vBC: Annotated[TDec_1302, Element] = None
        pICMS: Annotated[TDec_0302, Element] = None
        vICMS: Annotated[TDec_1302, Element] = None
        vCred: Annotated[TDec_1302, Element] = None

    ICMS90: Annotated[_ICMS90, Element] = None

    class _ICMSOutraUF(ComplexType):
        """ICMS devido à UF de origem da prestação, quando  diferente da UF do emitente"""
        CST: Annotated[str, Element] = None
        pRedBCOutraUF: Annotated[TDec_0302Opc, Element] = None
        vBCOutraUF: Annotated[TDec_1302, Element] = None
        pICMSOutraUF: Annotated[TDec_0302, Element] = None
        vICMSOutraUF: Annotated[TDec_1302, Element] = None

    ICMSOutraUF: Annotated[_ICMSOutraUF, Element] = None

    class _ICMSSN(ComplexType):
        """Simples Nacional"""
        CST: Annotated[str, Element] = None
        indSN: Annotated[str, Element] = None

    ICMSSN: Annotated[_ICMSSN, Element] = None
    ICMS00_ICMS20_ICMS45_ICMS60_ICMS90_ICMSOutraUF_ICMSSN = Choice("ICMS00", "ICMS20", "ICMS45", "ICMS60", "ICMS90", "ICMSOutraUF", "ICMSSN")


class TContainer(str):
    """Tipo Número do Container"""
    pass


class TUnidCarga(ComplexType):
    """Tipo Dados Unidade de Carga"""
    tpUnidCarga: Annotated[TtipoUnidCarga, Element] = None
    idUnidCarga: Annotated[TContainer, Element] = None

    class _lacUnidCarga(ComplexType):
        """Lacres das Unidades de Carga"""
        nLacre: Annotated[str, Element] = None

    lacUnidCarga: Annotated[ElementList[_lacUnidCarga], Element] = None
    qtdRat: Annotated[TDec_0302_0303, Element] = None


class TUnidadeTransp(ComplexType):
    """Tipo Dados Unidade de Transporte"""
    tpUnidTransp: Annotated[TtipoUnidTransp, Element] = None
    idUnidTransp: Annotated[TContainer, Element] = None

    class _lacUnidTransp(ComplexType):
        """Lacres das Unidades de Transporte"""
        nLacre: Annotated[str, Element] = None

    lacUnidTransp: Annotated[ElementList[_lacUnidTransp], Element] = None
    infUnidCarga: Annotated[ElementList[TUnidCarga], Element] = None
    qtdRat: Annotated[TDec_0302_0303, Element] = None


class TEmail(str):
    """Tipo Email"""
    pass


class TRespTec(ComplexType):
    """Tipo Dados da Responsável Técnico"""
    CNPJ: Annotated[TCnpj, Element] = None
    xContato: Annotated[str, Element] = None
    email: Annotated[TEmail, Element] = None
    fone: Annotated[str, Element] = None
    idCSRT: Annotated[str, Element] = None
    hashCSRT: Annotated[base64Binary, Element] = None


class TCfop(str):
    """Tipo CFOP"""
    pass


class TDocAssoc(str):
    """ Tipo Documento Associado"""
    pass


class TFinCTe(str):
    """Tipo Finalidade da CT-e"""
    pass


class TModDoc(str):
    """ Tipo Modelo do Documento"""
    pass


class TModTransp(str):
    """ Tipo Modal transporte"""
    pass


class TProcEmi(str):
    """Tipo processo de emissão do CT-e"""
    pass


class TTime(str):
    """Tipo hora"""
    pass


class TCTe(ComplexType):
    """Tipo Conhecimento de Transporte Eletrônico (Modelo 57)"""

    class _infCte(ComplexType):
        """Informações do CT-e"""
        versao: Annotated[TVerCTe, Attribute] = None
        Id: Annotated[str, Attribute(pattern=r'CTe[0-9]{44}')] = None

        class _ide(ComplexType):
            """Identificação do CT-e"""
            cUF: Annotated[TCodUfIBGE, Element] = None
            cCT: Annotated[str, Element] = None
            CFOP: Annotated[TCfop, Element] = None
            natOp: Annotated[str, Element] = None
            mod: Annotated[TModCT, Element] = None
            serie: Annotated[TSerie, Element] = None
            nCT: Annotated[TNF, Element] = None
            dhEmi: Annotated[TDateTimeUTC, Element] = None
            tpImp: Annotated[str, Element] = None
            tpEmis: Annotated[str, Element] = None
            cDV: Annotated[str, Element] = None
            tpAmb: Annotated[TAmb, Element] = None
            tpCTe: Annotated[TFinCTe, Element] = None
            procEmi: Annotated[TProcEmi, Element] = None
            verProc: Annotated[str, Element] = None
            indGlobalizado: Annotated[str, Element] = None
            cMunEnv: Annotated[TCodMunIBGE, Element] = None
            xMunEnv: Annotated[str, Element] = None
            UFEnv: Annotated[TUf, Element] = None
            modal: Annotated[TModTransp, Element] = None
            tpServ: Annotated[str, Element] = None
            cMunIni: Annotated[TCodMunIBGE, Element] = None
            xMunIni: Annotated[str, Element] = None
            UFIni: Annotated[TUf, Element] = None
            cMunFim: Annotated[TCodMunIBGE, Element] = None
            xMunFim: Annotated[str, Element] = None
            UFFim: Annotated[TUf, Element] = None
            retira: Annotated[str, Element] = None
            xDetRetira: Annotated[str, Element] = None
            indIEToma: Annotated[str, Element] = None

            class _toma3(ComplexType):
                """Indicador do \"papel\" do tomador do serviço no CT-e"""
                toma: Annotated[str, Element] = None

            toma3: Annotated[_toma3, Element] = None

            class _toma4(ComplexType):
                """Indicador do \"papel\" do tomador do serviço no CT-e"""
                toma: Annotated[str, Element] = None
                CNPJ: Annotated[TCnpjOpc, Element] = None
                CPF: Annotated[TCpf, Element] = None
                CNPJ_CPF = Choice("CNPJ", "CPF")
                IE: Annotated[TIeDest, Element] = None
                xNome: Annotated[str, Element] = None
                xFant: Annotated[str, Element] = None
                fone: Annotated[TFone, Element] = None
                enderToma: Annotated[TEndereco, Element] = None
                email: Annotated[TEmail, Element] = None

            toma4: Annotated[_toma4, Element] = None
            toma3_toma4 = Choice("toma3", "toma4")
            dhCont: Annotated[TDateTimeUTC, Element] = None
            xJust: Annotated[str, Element] = None

        ide: Annotated[_ide, Element] = None

        class _compl(ComplexType):
            """Dados complementares do CT-e para fins operacionais ou comerciais"""
            xCaracAd: Annotated[str, Element] = None
            xCaracSer: Annotated[str, Element] = None
            xEmi: Annotated[str, Element] = None

            class _fluxo(ComplexType):
                """Previsão do fluxo da carga
Preenchimento obrigatório para o modal aéreo."""
                xOrig: Annotated[str, Element] = None

                class _pass_(ComplexType):
                    xPass: Annotated[str, Element] = None

                pass_: Annotated[ElementList[_pass_], Element] = None
                xDest: Annotated[str, Element] = None
                xRota: Annotated[str, Element] = None

            fluxo: Annotated[_fluxo, Element] = None

            class _Entrega(ComplexType):
                """Informações ref. a previsão de entrega"""

                class _semData(ComplexType):
                    """Entrega sem data definida
Esta opção é proibida para o modal aéreo."""
                    tpPer: Annotated[str, Element] = None

                semData: Annotated[_semData, Element] = None

                class _comData(ComplexType):
                    """Entrega com data definida"""
                    tpPer: Annotated[str, Element] = None
                    dProg: Annotated[TData, Element] = None

                comData: Annotated[_comData, Element] = None

                class _noPeriodo(ComplexType):
                    """Entrega no período definido"""
                    tpPer: Annotated[str, Element] = None
                    dIni: Annotated[TData, Element] = None
                    dFim: Annotated[TData, Element] = None

                noPeriodo: Annotated[_noPeriodo, Element] = None
                semData_comData_noPeriodo = Choice("semData", "comData", "noPeriodo")

                class _semHora(ComplexType):
                    """Entrega sem hora definida"""
                    tpHor: Annotated[str, Element] = None

                semHora: Annotated[_semHora, Element] = None

                class _comHora(ComplexType):
                    """Entrega com hora definida"""
                    tpHor: Annotated[str, Element] = None
                    hProg: Annotated[TTime, Element] = None

                comHora: Annotated[_comHora, Element] = None

                class _noInter(ComplexType):
                    """Entrega no intervalo de horário definido"""
                    tpHor: Annotated[str, Element] = None
                    hIni: Annotated[TTime, Element] = None
                    hFim: Annotated[TTime, Element] = None

                noInter: Annotated[_noInter, Element] = None
                semHora_comHora_noInter = Choice("semHora", "comHora", "noInter")

            Entrega: Annotated[_Entrega, Element] = None
            origCalc: Annotated[str, Element] = None
            destCalc: Annotated[str, Element] = None
            xObs: Annotated[str, Element] = None

            class _ObsCont(ComplexType):
                """Campo de uso livre do contribuinte
Informar o nome do campo no atributo xCampo e o conteúdo do campo no XTexto"""
                xCampo: Annotated[str, Attribute(min_length=1, max_length=20)] = None
                xTexto: Annotated[str, Element] = None

            ObsCont: Annotated[ElementList[_ObsCont], Element] = None

            class _ObsFisco(ComplexType):
                """Campo de uso livre do contribuinte
Informar o nome do campo no atributo xCampo e o conteúdo do campo no XTexto"""
                xCampo: Annotated[str, Attribute(min_length=1, max_length=20)] = None
                xTexto: Annotated[str, Element] = None

            ObsFisco: Annotated[ElementList[_ObsFisco], Element] = None

        compl: Annotated[_compl, Element] = None

        class _emit(ComplexType):
            """Identificação do Emitente do CT-e"""
            CNPJ: Annotated[TCnpj, Element] = None
            IE: Annotated[TIe, Element] = None
            IEST: Annotated[TIe, Element] = None
            xNome: Annotated[str, Element] = None
            xFant: Annotated[str, Element] = None
            enderEmit: Annotated[TEndeEmi, Element] = None

        emit: Annotated[_emit, Element] = None

        class _rem(ComplexType):
            """Informações do Remetente das mercadorias transportadas pelo CT-e
Poderá não ser informado para os CT-e de redespacho intermediário e serviço vinculado a multimodal. Nos demais casos deverá sempre ser informado."""
            CNPJ: Annotated[TCnpjOpc, Element] = None
            CPF: Annotated[TCpf, Element] = None
            CNPJ_CPF = Choice("CNPJ", "CPF")
            IE: Annotated[TIeDest, Element] = None
            xNome: Annotated[str, Element] = None
            xFant: Annotated[str, Element] = None
            fone: Annotated[TFone, Element] = None
            enderReme: Annotated[TEndereco, Element] = None
            email: Annotated[TEmail, Element] = None

        rem: Annotated[_rem, Element] = None

        class _exped(ComplexType):
            """Informações do Expedidor da Carga"""
            CNPJ: Annotated[TCnpjOpc, Element] = None
            CPF: Annotated[TCpf, Element] = None
            CNPJ_CPF = Choice("CNPJ", "CPF")
            IE: Annotated[TIeDest, Element] = None
            xNome: Annotated[str, Element] = None
            fone: Annotated[TFone, Element] = None
            enderExped: Annotated[TEndereco, Element] = None
            email: Annotated[TEmail, Element] = None

        exped: Annotated[_exped, Element] = None

        class _receb(ComplexType):
            """Informações do Recebedor da Carga"""
            CNPJ: Annotated[TCnpjOpc, Element] = None
            CPF: Annotated[TCpf, Element] = None
            CNPJ_CPF = Choice("CNPJ", "CPF")
            IE: Annotated[TIeDest, Element] = None
            xNome: Annotated[str, Element] = None
            fone: Annotated[TFone, Element] = None
            enderReceb: Annotated[TEndereco, Element] = None
            email: Annotated[TEmail, Element] = None

        receb: Annotated[_receb, Element] = None

        class _dest(ComplexType):
            """Informações do Destinatário do CT-e
Poderá não ser informado para os CT-e de redespacho intermediário e serviço vinculado a multimodal. Nos demais casos deverá sempre ser informado."""
            CNPJ: Annotated[TCnpjOpc, Element] = None
            CPF: Annotated[TCpf, Element] = None
            CNPJ_CPF = Choice("CNPJ", "CPF")
            IE: Annotated[TIeDest, Element] = None
            xNome: Annotated[str, Element] = None
            fone: Annotated[TFone, Element] = None
            ISUF: Annotated[str, Element] = None
            enderDest: Annotated[TEndereco, Element] = None
            email: Annotated[TEmail, Element] = None

        dest: Annotated[_dest, Element] = None

        class _vPrest(ComplexType):
            """Valores da Prestação de Serviço"""
            vTPrest: Annotated[TDec_1302, Element] = None
            vRec: Annotated[TDec_1302, Element] = None

            class _Comp(ComplexType):
                """Componentes do Valor da Prestação"""
                xNome: Annotated[str, Element] = None
                vComp: Annotated[TDec_1302, Element] = None

            Comp: Annotated[ElementList[_Comp], Element] = None

        vPrest: Annotated[_vPrest, Element] = None

        class _imp(ComplexType):
            """Informações relativas aos Impostos"""
            ICMS: Annotated[TImp, Element] = None
            vTotTrib: Annotated[TDec_1302, Element] = None
            infAdFisco: Annotated[str, Element] = None

            class _ICMSUFFim(ComplexType):
                """Informações do ICMS de partilha com a UF de término do serviço de transporte na operação interestadual
Grupo a ser informado nas prestações interestaduais para consumidor final, não contribuinte do ICMS"""
                vBCUFFim: Annotated[TDec_1302, Element] = None
                pFCPUFFim: Annotated[TDec_0302, Element] = None
                pICMSUFFim: Annotated[TDec_0302, Element] = None
                pICMSInter: Annotated[TDec_0302, Element] = None
                vFCPUFFim: Annotated[TDec_1302, Element] = None
                vICMSUFFim: Annotated[TDec_1302, Element] = None
                vICMSUFIni: Annotated[TDec_1302, Element] = None

            ICMSUFFim: Annotated[_ICMSUFFim, Element] = None

        imp: Annotated[_imp, Element] = None

        class _infCTeNorm(ComplexType):
            """Grupo de informações do CT-e Normal e Substituto"""

            class _infCarga(ComplexType):
                """Informações da Carga do CT-e"""
                vCarga: Annotated[TDec_1302, Element] = None
                proPred: Annotated[str, Element] = None
                xOutCat: Annotated[str, Element] = None

                class _infQ(ComplexType):
                    """Informações de quantidades da Carga do CT-e
Para o Aéreo é obrigatório o preenchimento desse campo da seguinte forma.
1 - Peso Bruto, sempre em quilogramas (obrigatório);
2 - Peso Cubado; sempre em quilogramas;
3 - Quantidade de volumes, sempre em unidades (obrigatório);
4 - Cubagem, sempre em metros cúbicos (obrigatório apenas quando for impossível preencher as dimensões da(s) embalagem(ens) na tag xDime do leiaute do Aéreo)."""
                    cUnid: Annotated[str, Element] = None
                    tpMed: Annotated[str, Element] = None
                    qCarga: Annotated[TDec_1104, Element] = None

                infQ: Annotated[ElementList[_infQ], Element] = None
                vCargaAverb: Annotated[TDec_1302Opc, Element] = None

            infCarga: Annotated[_infCarga, Element] = None

            class _infDoc(ComplexType):
                """Informações dos documentos transportados pelo CT-e
Opcional para Redespacho Intermediario e Serviço vinculado a multimodal.
Poderá não ser informado para os CT-e de redespacho intermediário e serviço vinculado a multimodal. Nos demais casos deverá sempre ser informado."""

                class _infNF(ComplexType):
                    """Informações das NF
Este grupo deve ser informado quando o documento originário for NF """
                    nRoma: Annotated[str, Element] = None
                    nPed: Annotated[str, Element] = None
                    mod: Annotated[TModNF, Element] = None
                    serie: Annotated[str, Element] = None
                    nDoc: Annotated[str, Element] = None
                    dEmi: Annotated[TData, Element] = None
                    vBC: Annotated[TDec_1302, Element] = None
                    vICMS: Annotated[TDec_1302, Element] = None
                    vBCST: Annotated[TDec_1302, Element] = None
                    vST: Annotated[TDec_1302, Element] = None
                    vProd: Annotated[TDec_1302, Element] = None
                    vNF: Annotated[TDec_1302, Element] = None
                    nCFOP: Annotated[TCfop, Element] = None
                    nPeso: Annotated[TDec_1203Opc, Element] = None
                    PIN: Annotated[str, Element] = None
                    dPrev: Annotated[TData, Element] = None
                    infUnidCarga: Annotated[ElementList[TUnidCarga], Element] = None
                    infUnidTransp: Annotated[ElementList[TUnidadeTransp], Element] = None
                    infUnidCarga_infUnidTransp = Choice("infUnidCarga", "infUnidTransp")

                infNF: Annotated[ElementList[_infNF], Element] = None

                class _infNFe(ComplexType):
                    """Informações das NF-e"""
                    chave: Annotated[TChNFe, Element] = None
                    PIN: Annotated[str, Element] = None
                    dPrev: Annotated[TData, Element] = None
                    infUnidCarga: Annotated[ElementList[TUnidCarga], Element] = None
                    infUnidTransp: Annotated[ElementList[TUnidadeTransp], Element] = None
                    infUnidCarga_infUnidTransp = Choice("infUnidCarga", "infUnidTransp")

                infNFe: Annotated[ElementList[_infNFe], Element] = None

                class _infOutros(ComplexType):
                    """Informações dos demais documentos"""
                    tpDoc: Annotated[str, Element] = None
                    descOutros: Annotated[str, Element] = None
                    nDoc: Annotated[str, Element] = None
                    dEmi: Annotated[TData, Element] = None
                    vDocFisc: Annotated[TDec_1302Opc, Element] = None
                    dPrev: Annotated[TData, Element] = None
                    infUnidCarga: Annotated[ElementList[TUnidCarga], Element] = None
                    infUnidTransp: Annotated[ElementList[TUnidadeTransp], Element] = None
                    infUnidCarga_infUnidTransp = Choice("infUnidCarga", "infUnidTransp")

                infOutros: Annotated[ElementList[_infOutros], Element] = None
                infNF_infNFe_infOutros = Choice("infNF", "infNFe", "infOutros")

            infDoc: Annotated[_infDoc, Element] = None

            class _docAnt(ComplexType):
                """Documentos de Transporte Anterior"""

                class _emiDocAnt(ComplexType):
                    """Emissor do documento anterior"""
                    CNPJ: Annotated[TCnpjOpc, Element] = None
                    CPF: Annotated[TCpf, Element] = None
                    CNPJ_CPF = Choice("CNPJ", "CPF")
                    IE: Annotated[TIe, Element] = None
                    UF: Annotated[TUf, Element] = None
                    xNome: Annotated[str, Element] = None

                    class _idDocAnt(ComplexType):
                        """Informações de identificação dos documentos de Transporte Anterior"""

                        class _idDocAntPap(ComplexType):
                            """Documentos de transporte anterior em papel"""
                            tpDoc: Annotated[TDocAssoc, Element] = None
                            serie: Annotated[str, Element] = None
                            subser: Annotated[str, Element] = None
                            nDoc: Annotated[str, Element] = None
                            dEmi: Annotated[TData, Element] = None

                        idDocAntPap: Annotated[ElementList[_idDocAntPap], Element] = None

                        class _idDocAntEle(ComplexType):
                            """Documentos de transporte anterior eletrônicos"""
                            chCTe: Annotated[TChNFe, Element] = None

                        idDocAntEle: Annotated[ElementList[_idDocAntEle], Element] = None
                        idDocAntPap_idDocAntEle = Choice("idDocAntPap", "idDocAntEle")

                    idDocAnt: Annotated[ElementList[_idDocAnt], Element] = None

                emiDocAnt: Annotated[ElementList[_emiDocAnt], Element] = None

            docAnt: Annotated[_docAnt, Element] = None

            class _infModal(ComplexType):
                """Informações do modal"""
                versaoModal: Annotated[str, Attribute(pattern=r'3\.(0[0-9]|[1-9][0-9])')] = None

            infModal: Annotated[_infModal, Element] = None

            class _veicNovos(ComplexType):
                """informações dos veículos transportados"""
                chassi: Annotated[str, Element] = None
                cCor: Annotated[str, Element] = None
                xCor: Annotated[str, Element] = None
                cMod: Annotated[str, Element] = None
                vUnit: Annotated[TDec_1302, Element] = None
                vFrete: Annotated[TDec_1302, Element] = None

            veicNovos: Annotated[ElementList[_veicNovos], Element] = None

            class _cobr(ComplexType):
                """Dados da cobrança do CT-e"""

                class _fat(ComplexType):
                    """Dados da fatura"""
                    nFat: Annotated[str, Element] = None
                    vOrig: Annotated[TDec_1302Opc, Element] = None
                    vDesc: Annotated[TDec_1302Opc, Element] = None
                    vLiq: Annotated[TDec_1302Opc, Element] = None

                fat: Annotated[_fat, Element] = None

                class _dup(ComplexType):
                    """Dados das duplicatas"""
                    nDup: Annotated[str, Element] = None
                    dVenc: Annotated[TData, Element] = None
                    vDup: Annotated[TDec_1302Opc, Element] = None

                dup: Annotated[ElementList[_dup], Element] = None

            cobr: Annotated[_cobr, Element] = None

            class _infCteSub(ComplexType):
                """Informações do CT-e de substituição """
                chCte: Annotated[str, Element] = None
                refCteAnu: Annotated[TChNFe, Element] = None

                class _tomaICMS(ComplexType):
                    """Tomador é contribuinte do ICMS, mas não é emitente de documento fiscal eletrônico"""
                    refNFe: Annotated[TChNFe, Element] = None

                    class _refNF(ComplexType):
                        """Informação da NF ou CT emitido pelo Tomador"""
                        CNPJ: Annotated[TCnpj, Element] = None
                        CPF: Annotated[TCpf, Element] = None
                        CNPJ_CPF = Choice("CNPJ", "CPF")
                        mod: Annotated[TModDoc, Element] = None
                        serie: Annotated[TSerie, Element] = None
                        subserie: Annotated[TSerie, Element] = None
                        nro: Annotated[str, Element] = None
                        valor: Annotated[TDec_1302, Element] = None
                        dEmi: Annotated[TData, Element] = None

                    refNF: Annotated[_refNF, Element] = None
                    refCte: Annotated[TChNFe, Element] = None
                    refNFe_refNF_refCte = Choice("refNFe", "refNF", "refCte")

                tomaICMS: Annotated[_tomaICMS, Element] = None
                refCteAnu_tomaICMS = Choice("refCteAnu", "tomaICMS")
                indAlteraToma: Annotated[str, Element] = None

            infCteSub: Annotated[_infCteSub, Element] = None

            class _infGlobalizado(ComplexType):
                """Informações do CT-e Globalizado"""
                xObs: Annotated[str, Element] = None

            infGlobalizado: Annotated[_infGlobalizado, Element] = None

            class _infServVinc(ComplexType):
                """Informações do Serviço Vinculado a Multimodal"""

                class _infCTeMultimodal(ComplexType):
                    """informações do CT-e multimodal vinculado"""
                    chCTeMultimodal: Annotated[TChNFe, Element] = None

                infCTeMultimodal: Annotated[ElementList[_infCTeMultimodal], Element] = None

            infServVinc: Annotated[_infServVinc, Element] = None

        infCTeNorm: Annotated[_infCTeNorm, Element] = None

        class _infCteComp(ComplexType):
            """Detalhamento do CT-e complementado"""
            chCTe: Annotated[TChNFe, Element] = None

        infCteComp: Annotated[_infCteComp, Element] = None

        class _infCteAnu(ComplexType):
            """Detalhamento do CT-e do tipo Anulação"""
            chCte: Annotated[str, Element] = None
            dEmi: Annotated[TData, Element] = None

        infCteAnu: Annotated[_infCteAnu, Element] = None
        infCTeNorm_infCteComp_infCteAnu = Choice("infCTeNorm", "infCteComp", "infCteAnu")

        class _autXML(ComplexType):
            """Autorizados para download do XML do DF-e
Informar CNPJ ou CPF. Preencher os zeros não significativos."""
            CNPJ: Annotated[TCnpj, Element] = None
            CPF: Annotated[TCpf, Element] = None
            CNPJ_CPF = Choice("CNPJ", "CPF")

        autXML: Annotated[ElementList[_autXML], Element] = None
        infRespTec: Annotated[TRespTec, Element] = None

    infCte: Annotated[_infCte, Element] = None

    class _infCTeSupl(ComplexType):
        """Informações suplementares do CT-e"""
        qrCodCTe: Annotated[str, Element] = None

    infCTeSupl: Annotated[_infCTeSupl, Element] = None
    Signature: Annotated[XmlSignature, Element] = None


class TImpOS(ComplexType):
    """Tipo Dados do Imposto para CT-e OS"""

    class _ICMS00(ComplexType):
        """Prestação sujeito à tributação normal do ICMS"""
        CST: Annotated[str, Element] = None
        vBC: Annotated[TDec_1302, Element] = None
        pICMS: Annotated[TDec_0302, Element] = None
        vICMS: Annotated[TDec_1302, Element] = None

    ICMS00: Annotated[_ICMS00, Element] = None

    class _ICMS20(ComplexType):
        """Prestação sujeito à tributação com redução de BC do ICMS"""
        CST: Annotated[str, Element] = None
        pRedBC: Annotated[TDec_0302Opc, Element] = None
        vBC: Annotated[TDec_1302, Element] = None
        pICMS: Annotated[TDec_0302, Element] = None
        vICMS: Annotated[TDec_1302, Element] = None

    ICMS20: Annotated[_ICMS20, Element] = None

    class _ICMS45(ComplexType):
        """ICMS  Isento, não Tributado ou diferido"""
        CST: Annotated[str, Element] = None

    ICMS45: Annotated[_ICMS45, Element] = None

    class _ICMS90(ComplexType):
        """ICMS Outros"""
        CST: Annotated[str, Element] = None
        pRedBC: Annotated[TDec_0302Opc, Element] = None
        vBC: Annotated[TDec_1302, Element] = None
        pICMS: Annotated[TDec_0302, Element] = None
        vICMS: Annotated[TDec_1302, Element] = None
        vCred: Annotated[TDec_1302, Element] = None

    ICMS90: Annotated[_ICMS90, Element] = None

    class _ICMSOutraUF(ComplexType):
        """ICMS devido à UF de origem da prestação, quando  diferente da UF do emitente"""
        CST: Annotated[str, Element] = None
        pRedBCOutraUF: Annotated[TDec_0302Opc, Element] = None
        vBCOutraUF: Annotated[TDec_1302, Element] = None
        pICMSOutraUF: Annotated[TDec_0302, Element] = None
        vICMSOutraUF: Annotated[TDec_1302, Element] = None

    ICMSOutraUF: Annotated[_ICMSOutraUF, Element] = None

    class _ICMSSN(ComplexType):
        """Simples Nacional"""
        CST: Annotated[str, Element] = None
        indSN: Annotated[str, Element] = None

    ICMSSN: Annotated[_ICMSSN, Element] = None
    ICMS00_ICMS20_ICMS45_ICMS90_ICMSOutraUF_ICMSSN = Choice("ICMS00", "ICMS20", "ICMS45", "ICMS90", "ICMSOutraUF", "ICMSSN")


class TModTranspOS(str):
    """ Tipo Modal transporte Outros Serviços"""
    pass


class TCTeOS(ComplexType):
    """Tipo Conhecimento de Transporte Eletrônico Outros Serviços (Modelo 67)"""
    versao: Annotated[TVerCTe, Attribute] = None

    class _infCte(ComplexType):
        """Informações do CT-e Outros Serviços"""
        versao: Annotated[TVerCTe, Attribute] = None
        Id: Annotated[str, Attribute(pattern=r'CTe[0-9]{44}')] = None

        class _ide(ComplexType):
            """Identificação do CT-e Outros Serviços"""
            cUF: Annotated[TCodUfIBGE, Element] = None
            cCT: Annotated[str, Element] = None
            CFOP: Annotated[TCfop, Element] = None
            natOp: Annotated[str, Element] = None
            mod: Annotated[TModCTOS, Element] = None
            serie: Annotated[TSerie, Element] = None
            nCT: Annotated[TNF, Element] = None
            dhEmi: Annotated[TDateTimeUTC, Element] = None
            tpImp: Annotated[str, Element] = None
            tpEmis: Annotated[str, Element] = None
            cDV: Annotated[str, Element] = None
            tpAmb: Annotated[TAmb, Element] = None
            tpCTe: Annotated[TFinCTe, Element] = None
            procEmi: Annotated[TProcEmi, Element] = None
            verProc: Annotated[str, Element] = None
            cMunEnv: Annotated[TCodMunIBGE, Element] = None
            xMunEnv: Annotated[str, Element] = None
            UFEnv: Annotated[TUf, Element] = None
            modal: Annotated[TModTranspOS, Element] = None
            tpServ: Annotated[str, Element] = None
            indIEToma: Annotated[str, Element] = None
            cMunIni: Annotated[TCodMunIBGE, Element] = None
            xMunIni: Annotated[str, Element] = None
            UFIni: Annotated[TUf, Element] = None
            cMunFim: Annotated[TCodMunIBGE, Element] = None
            xMunFim: Annotated[str, Element] = None
            UFFim: Annotated[TUf, Element] = None

            class _infPercurso(ComplexType):
                """Informações do Percurso do CT-e Outros Serviços"""
                UFPer: Annotated[TUf, Element] = None

            infPercurso: Annotated[ElementList[_infPercurso], Element] = None
            dhCont: Annotated[TDateTimeUTC, Element] = None
            xJust: Annotated[str, Element] = None

        ide: Annotated[_ide, Element] = None

        class _compl(ComplexType):
            """Dados complementares do CT-e para fins operacionais ou comerciais"""
            xCaracAd: Annotated[str, Element] = None
            xCaracSer: Annotated[str, Element] = None
            xEmi: Annotated[str, Element] = None
            xObs: Annotated[str, Element] = None

            class _ObsCont(ComplexType):
                """Campo de uso livre do contribuinte
Informar o nome do campo no atributo xCampo e o conteúdo do campo no XTexto"""
                xCampo: Annotated[str, Attribute(min_length=1, max_length=20)] = None
                xTexto: Annotated[str, Element] = None

            ObsCont: Annotated[ElementList[_ObsCont], Element] = None

            class _ObsFisco(ComplexType):
                """Campo de uso livre do contribuinte
Informar o nome do campo no atributo xCampo e o conteúdo do campo no XTexto"""
                xCampo: Annotated[str, Attribute(min_length=1, max_length=20)] = None
                xTexto: Annotated[str, Element] = None

            ObsFisco: Annotated[ElementList[_ObsFisco], Element] = None

        compl: Annotated[_compl, Element] = None

        class _emit(ComplexType):
            """Identificação do Emitente do CT-e OS"""
            CNPJ: Annotated[TCnpj, Element] = None
            IE: Annotated[TIe, Element] = None
            IEST: Annotated[TIe, Element] = None
            xNome: Annotated[str, Element] = None
            xFant: Annotated[str, Element] = None
            enderEmit: Annotated[TEndeEmi, Element] = None

        emit: Annotated[_emit, Element] = None

        class _toma(ComplexType):
            """Informações do Tomador/Usuário do Serviço
Opcional para Excesso de Bagagem"""
            CNPJ: Annotated[TCnpjOpc, Element] = None
            CPF: Annotated[TCpf, Element] = None
            CNPJ_CPF = Choice("CNPJ", "CPF")
            IE: Annotated[TIeDest, Element] = None
            xNome: Annotated[str, Element] = None
            xFant: Annotated[str, Element] = None
            fone: Annotated[TFone, Element] = None
            enderToma: Annotated[TEndereco, Element] = None
            email: Annotated[TEmail, Element] = None

        toma: Annotated[_toma, Element] = None

        class _vPrest(ComplexType):
            """Valores da Prestação de Serviço"""
            vTPrest: Annotated[TDec_1302, Element] = None
            vRec: Annotated[TDec_1302, Element] = None

            class _Comp(ComplexType):
                """Componentes do Valor da Prestação"""
                xNome: Annotated[str, Element] = None
                vComp: Annotated[TDec_1302, Element] = None

            Comp: Annotated[ElementList[_Comp], Element] = None

        vPrest: Annotated[_vPrest, Element] = None

        class _imp(ComplexType):
            """Informações relativas aos Impostos"""
            ICMS: Annotated[TImpOS, Element] = None
            vTotTrib: Annotated[TDec_1302, Element] = None
            infAdFisco: Annotated[str, Element] = None

            class _ICMSUFFim(ComplexType):
                """Informações do ICMS de partilha com a UF de término do serviço de transporte na operação interestadual
Grupo a ser informado nas prestações interestaduais para consumidor final, não contribuinte do ICMS"""
                vBCUFFim: Annotated[TDec_1302, Element] = None
                pFCPUFFim: Annotated[TDec_0302, Element] = None
                pICMSUFFim: Annotated[TDec_0302, Element] = None
                pICMSInter: Annotated[TDec_0302, Element] = None
                vFCPUFFim: Annotated[TDec_1302, Element] = None
                vICMSUFFim: Annotated[TDec_1302, Element] = None
                vICMSUFIni: Annotated[TDec_1302, Element] = None

            ICMSUFFim: Annotated[_ICMSUFFim, Element] = None

            class _infTribFed(ComplexType):
                """Informações dos tributos federais
Grupo a ser informado nas prestações interestaduais para consumidor final, não contribuinte do ICMS"""
                vPIS: Annotated[TDec_1302, Element] = None
                vCOFINS: Annotated[TDec_1302, Element] = None
                vIR: Annotated[TDec_1302, Element] = None
                vINSS: Annotated[TDec_1302, Element] = None
                vCSLL: Annotated[TDec_1302, Element] = None

            infTribFed: Annotated[_infTribFed, Element] = None

        imp: Annotated[_imp, Element] = None

        class _infCTeNorm(ComplexType):
            """Grupo de informações do CT-e OS Normal"""

            class _infServico(ComplexType):
                """Informações da Prestação do Serviço"""
                xDescServ: Annotated[str, Element] = None

                class _infQ(ComplexType):
                    """Informações de quantidades da Carga do CT-e
Para Transporte de Pessoas indicar número de passageiros, para excesso de bagagem e transporte de valores indicar número de Volumes/Malotes"""
                    qCarga: Annotated[TDec_1104, Element] = None

                infQ: Annotated[_infQ, Element] = None

            infServico: Annotated[_infServico, Element] = None

            class _infDocRef(ComplexType):
                """Informações dos documentos referenciados"""
                nDoc: Annotated[str, Element] = None
                serie: Annotated[str, Element] = None
                subserie: Annotated[str, Element] = None
                dEmi: Annotated[TData, Element] = None
                vDoc: Annotated[TDec_1302, Element] = None

            infDocRef: Annotated[ElementList[_infDocRef], Element] = None

            class _seg(ComplexType):
                """Informações de Seguro da Carga"""
                respSeg: Annotated[str, Element] = None
                xSeg: Annotated[str, Element] = None
                nApol: Annotated[str, Element] = None

            seg: Annotated[ElementList[_seg], Element] = None

            class _infModal(ComplexType):
                """Informações do modal
Obrigatório para Pessoas e Bagagem"""
                versaoModal: Annotated[str, Attribute(pattern=r'3\.(0[0-9]|[1-9][0-9])')] = None

            infModal: Annotated[_infModal, Element] = None

            class _infCteSub(ComplexType):
                """Informações do CT-e de substituição """
                chCte: Annotated[str, Element] = None
                refCteAnu: Annotated[TChNFe, Element] = None

                class _tomaICMS(ComplexType):
                    """Tomador é contribuinte do ICMS, mas não é emitente de documento fiscal eletrônico"""
                    refNFe: Annotated[TChNFe, Element] = None

                    class _refNF(ComplexType):
                        """Informação da NF ou CT emitido pelo Tomador"""
                        CNPJ: Annotated[TCnpj, Element] = None
                        CPF: Annotated[TCpf, Element] = None
                        CNPJ_CPF = Choice("CNPJ", "CPF")
                        mod: Annotated[TModDoc, Element] = None
                        serie: Annotated[TSerie, Element] = None
                        subserie: Annotated[TSerie, Element] = None
                        nro: Annotated[str, Element] = None
                        valor: Annotated[TDec_1302, Element] = None
                        dEmi: Annotated[TData, Element] = None

                    refNF: Annotated[_refNF, Element] = None
                    refCte: Annotated[TChNFe, Element] = None
                    refNFe_refNF_refCte = Choice("refNFe", "refNF", "refCte")

                tomaICMS: Annotated[_tomaICMS, Element] = None
                refCteAnu_tomaICMS = Choice("refCteAnu", "tomaICMS")

            infCteSub: Annotated[_infCteSub, Element] = None
            refCTeCanc: Annotated[TChNFe, Element] = None

            class _cobr(ComplexType):
                """Dados da cobrança do CT-e"""

                class _fat(ComplexType):
                    """Dados da fatura"""
                    nFat: Annotated[str, Element] = None
                    vOrig: Annotated[TDec_1302Opc, Element] = None
                    vDesc: Annotated[TDec_1302Opc, Element] = None
                    vLiq: Annotated[TDec_1302Opc, Element] = None

                fat: Annotated[_fat, Element] = None

                class _dup(ComplexType):
                    """Dados das duplicatas"""
                    nDup: Annotated[str, Element] = None
                    dVenc: Annotated[TData, Element] = None
                    vDup: Annotated[TDec_1302Opc, Element] = None

                dup: Annotated[ElementList[_dup], Element] = None

            cobr: Annotated[_cobr, Element] = None

        infCTeNorm: Annotated[_infCTeNorm, Element] = None

        class _infCteComp(ComplexType):
            """Detalhamento do CT-e complementado"""
            chCTe: Annotated[TChNFe, Element] = None

        infCteComp: Annotated[_infCteComp, Element] = None

        class _infCteAnu(ComplexType):
            """Detalhamento do CT-e do tipo Anulação"""
            chCte: Annotated[str, Element] = None
            dEmi: Annotated[TData, Element] = None

        infCteAnu: Annotated[_infCteAnu, Element] = None
        infCTeNorm_infCteComp_infCteAnu = Choice("infCTeNorm", "infCteComp", "infCteAnu")

        class _autXML(ComplexType):
            """Autorizados para download do XML do DF-e
Informar CNPJ ou CPF. Preencher os zeros não significativos."""
            CNPJ: Annotated[TCnpj, Element] = None
            CPF: Annotated[TCpf, Element] = None
            CNPJ_CPF = Choice("CNPJ", "CPF")

        autXML: Annotated[ElementList[_autXML], Element] = None
        infRespTec: Annotated[TRespTec, Element] = None

    infCte: Annotated[_infCte, Element] = None

    class _infCTeSupl(ComplexType):
        """Informações suplementares do CT-e"""
        qrCodCTe: Annotated[str, Element] = None

    infCTeSupl: Annotated[_infCTeSupl, Element] = None
    Signature: Annotated[XmlSignature, Element] = None


class TIdLote(str):
    """Tipo Identificador de controle do envio do lote. Número seqüencial auto-incremental, de controle correspondente ao identificador único do lote enviado. A responsabilidade de gerar e controlar esse número é do próprio contribuinte."""
    pass


class TEnviCTe(ComplexType):
    """Tipo Pedido de Concessão de Autorização da CT-e"""
    versao: Annotated[TVerCTe, Attribute] = None
    idLote: Annotated[TIdLote, Element] = None
    CTe: Annotated[ElementList[TCTe], Element] = None


class TRetEnviCTe(ComplexType):
    """Tipo Retorno do Pedido de Concessão de Autorização da CT-e"""
    versao: Annotated[TVerCTe, Attribute] = None
    tpAmb: Annotated[TAmb, Element] = None
    cUF: Annotated[TCodUfIBGE, Element] = None
    verAplic: Annotated[TVerAplic, Element] = None
    cStat: Annotated[TStat, Element] = None
    xMotivo: Annotated[TMotivo, Element] = None

    class _infRec(ComplexType):
        """Dados do Recibo do Lote"""
        nRec: Annotated[TRec, Element] = None
        dhRecbto: Annotated[TDateTimeUTC, Element] = None
        tMed: Annotated[int, Element] = None

    infRec: Annotated[_infRec, Element] = None


class TEndernac(ComplexType):
    """Tipo Dados do Endereço"""
    xLgr: Annotated[str, Element] = None
    nro: Annotated[str, Element] = None
    xCpl: Annotated[str, Element] = None
    xBairro: Annotated[str, Element] = None
    cMun: Annotated[TCodMunIBGE, Element] = None
    xMun: Annotated[str, Element] = None
    CEP: Annotated[str, Element] = None
    UF: Annotated[TUf, Element] = None


class TEndOrg(ComplexType):
    """Tipo Dados do Endereço"""
    xLgr: Annotated[str, Element] = None
    nro: Annotated[str, Element] = None
    xCpl: Annotated[str, Element] = None
    xBairro: Annotated[str, Element] = None
    cMun: Annotated[TCodMunIBGE, Element] = None
    xMun: Annotated[str, Element] = None
    CEP: Annotated[str, Element] = None
    UF: Annotated[TUf, Element] = None
    cPais: Annotated[str, Element] = None
    xPais: Annotated[str, Element] = None
    fone: Annotated[TFone, Element] = None


class TLocal(ComplexType):
    """Tipo Dados do Local de Origem ou Destino"""
    cMun: Annotated[TCodMunIBGE, Element] = None
    xMun: Annotated[str, Element] = None
    UF: Annotated[TUf, Element] = None


class TEndReEnt(ComplexType):
    """ Tipo Dados do Local de Retirada ou Entrega"""
    CNPJ: Annotated[TCnpj, Element] = None
    CPF: Annotated[TCpf, Element] = None
    CNPJ_CPF = Choice("CNPJ", "CPF")
    xNome: Annotated[str, Element] = None
    xLgr: Annotated[str, Element] = None
    nro: Annotated[str, Element] = None
    xCpl: Annotated[str, Element] = None
    xBairro: Annotated[str, Element] = None
    cMun: Annotated[TCodMunIBGE, Element] = None
    xMun: Annotated[str, Element] = None
    UF: Annotated[TUf, Element] = None


class TCListServ(str):
    """Tipo Código da Lista de Serviços LC 116/2003"""
    pass


class TFinCTeOS(str):
    """Tipo Finalidade da CT-e Outros Serviços"""
    pass


class TRNTRC(str):
    """Tipo RNTRC - Registro Nacional Transportadores Rodoviários de Carga"""
    pass


class TCIOT(str):
    """Tipo CIOT - Código Identificador da Operação de Transporte"""
    pass


