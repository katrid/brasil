# Generated by xsd2py.py
# DO NOT CHANGE THIS FILE (use compile override instead)
# xsd: eventoCTeTiposBasico_v4.00.xsd
# xmlns: http://www.portalfiscal.inf.br/cte
from typing import List, Annotated
from datetime import date, datetime
from decimal import Decimal

from brasil.dfe.xsd import Choice, SimpleType, ComplexType, Attribute, Element, TString, Restriction, ID, base64Binary, anyURI, string, dateTime, TXML, ElementList, XmlSignature
from .tiposGeralCTe_v400 import *
from .evPrestDesacordo_v400 import *
from .evCancCTe_v400 import *
from .evCCeCTe_v400 import *


class TVerEvento(str):
    """Tipo Versão do Evento"""
    pass


class TEvento(ComplexType):
    """Tipo Evento"""
    versao: Annotated[TVerEvento, Attribute] = None

    class _infEvento(ComplexType):
        Id: Annotated[str, Attribute(pattern=r'ID[0-9]{53}')] = None
        cOrgao: Annotated[TCOrgaoIBGE, Element] = None
        tpAmb: Annotated[TAmb, Element] = None
        CNPJ: Annotated[TCnpj, Element] = None
        CPF: Annotated[TCpf, Element] = None
        CNPJ_CPF = Choice("CNPJ", "CPF")
        chCTe: Annotated[TChDFe, Element] = None
        dhEvento: Annotated[TDateTimeUTC, Element] = None
        tpEvento: Annotated[str, Element] = None
        nSeqEvento: Annotated[str, Element] = None

        class _detEvento(ComplexType):
            """Detalhamento do evento específico"""
            versaoEvento: Annotated[str, Attribute(pattern=r'4\.(0[0-9]|[1-9][0-9])')] = None
            evPrestDesacordo: Annotated[evPrestDesacordo, Element] = None
            evCancCTe: Annotated[evCancCTe, Element] = None
            evCCeCTe: Annotated[evCCeCTe, Element] = None

        detEvento: Annotated[_detEvento, Element] = None

        class _infSolicNFF(ComplexType):
            """Grupo de informações do pedido de registro de evento da Nota Fiscal Fácil"""
            xSolic: Annotated[str, Element] = None

        infSolicNFF: Annotated[_infSolicNFF, Element] = None

        class _infPAA(ComplexType):
            """Grupo de Informação do Provedor de Assinatura e Autorização"""
            CNPJPAA: Annotated[TCnpj, Element] = None

            class _PAASignature(ComplexType):
                """Assinatura RSA do Emitente para DFe gerados por PAA"""
                SignatureValue: Annotated[base64Binary, Element] = None
                RSAKeyValue: Annotated[TRSAKeyValueType, Element] = None

            PAASignature: Annotated[_PAASignature, Element] = None

        infPAA: Annotated[_infPAA, Element] = None

    infEvento: Annotated[_infEvento, Element] = None
    Signature: Annotated[XmlSignature, Element] = None


class TRetEvento(ComplexType):
    """Tipo retorno do Evento"""
    versao: Annotated[TVerEvento, Attribute] = None

    class _infEvento(ComplexType):
        Id: Annotated[str, Attribute(pattern=r'ID[0-9]{15}')] = None
        tpAmb: Annotated[TAmb, Element] = None
        verAplic: Annotated[TVerAplic, Element] = None
        cOrgao: Annotated[TCOrgaoIBGE, Element] = None
        cStat: Annotated[TStat, Element] = None
        xMotivo: Annotated[TMotivo, Element] = None
        chCTe: Annotated[TChDFe, Element] = None
        tpEvento: Annotated[str, Element] = None
        xEvento: Annotated[str, Element] = None
        nSeqEvento: Annotated[str, Element] = None
        dhRegEvento: Annotated[TDateTimeUTC, Element] = None
        nProt: Annotated[TProt, Element] = None

    infEvento: Annotated[_infEvento, Element] = None
    Signature: Annotated[XmlSignature, Element] = None


class TProcEvento(ComplexType):
    """Tipo procEvento"""
    versao: Annotated[TVerEvento, Attribute] = None
    ipTransmissor: Annotated[TIPv4, Attribute] = None
    nPortaCon: Annotated[str, Attribute(pattern=r'[0-9]{1,5}')] = None
    dhConexao: Annotated[TDateTimeUTC, Attribute] = None
    eventoCTe: Annotated[TEvento, Element] = None
    retEventoCTe: Annotated[TRetEvento, Element] = None


class TModTransp(str):
    """ Tipo Modal transporte"""
    pass


class TNSU(str):
    """ Tipo número sequencial único do AN"""
    pass


